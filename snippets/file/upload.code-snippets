{
    "PrimeNG FileUpload Import": {
        "prefix": "p-fileupload-import",
        "body": [
            "import { FileUploadModule } from 'primeng/fileupload';"
        ],
        "description": "Imports PrimeNG FileUploadModule in TypeScript"
    },
    "PrimeNG FileUpload Basic": {
        "prefix": "p-fileupload-basic",
        "body": [
            "import { FileUploadModule } from 'primeng/fileupload';",
            "",
            "<p-fileupload #fu mode=\"basic\" chooseLabel=\"${1:Choose}\" chooseIcon=\"pi pi-upload\" name=\"demo[]\" url=\"${2:https://www.primefaces.org/cdn/api/upload.php}\" accept=\"${3:image/*}\" maxFileSize=\"${4:1000000}\" (onUpload)=\"onUpload($event)\" />",
            "<p-button label=\"${5:Upload}\" (onClick)=\"fu.upload()\" severity=\"secondary\" />"
        ],
        "description": "Basic PrimeNG FileUpload with manual upload"
    },
    "PrimeNG FileUpload Auto": {
        "prefix": "p-fileupload-auto",
        "body": [
            "import { FileUploadModule } from 'primeng/fileupload';",
            "",
            "<p-fileupload mode=\"basic\" name=\"demo[]\" chooseIcon=\"pi pi-upload\" url=\"${1:https://www.primefaces.org/cdn/api/upload.php}\" accept=\"${2:image/*}\" maxFileSize=\"${3:1000000}\" (onUpload)=\"onBasicUploadAuto($event)\" [auto]=\"true\" chooseLabel=\"${4:Browse}\" />"
        ],
        "description": "PrimeNG FileUpload with auto upload on file selection"
    },
    "PrimeNG FileUpload Template": {
        "prefix": "p-fileupload-template",
        "body": [
            "import { Component } from '@angular/core';",
            "import { FileUploadModule } from 'primeng/fileupload';",
            "import { MessageService } from 'primeng/api';",
            "",
            "@Component({",
            "    templateUrl: './${1:fileuploaddemo.html}',",
            "    providers: [MessageService]",
            "})",
            "export class ${2:FileUploadDemo} {",
            "    totalSize: number = 0;",
            "    totalSizePercent: number = 0;",
            "    uploadedFiles: any[] = [];",
            "",
            "    constructor(private messageService: MessageService) {}",
            "",
            "    choose(event: Event, callback: () => void) {",
            "        callback();",
            "    }",
            "",
            "    onRemoveTemplatingFile(event: Event, file: File, removeFileCallback: (index: number) => void, index: number) {",
            "        removeFileCallback(index);",
            "        this.totalSize -= file.size;",
            "        this.totalSizePercent = this.totalSize / 10000;",
            "    }",
            "",
            "    onSelectedFiles(event: any) {",
            "        this.totalSize = 0;",
            "        event.files.forEach((file: File) => {",
            "            this.totalSize += file.size;",
            "        });",
            "        this.totalSizePercent = this.totalSize / 10000;",
            "    }",
            "",
            "    uploadEvent(callback: () => void) {",
            "        callback();",
            "    }",
            "",
            "    onTemplatedUpload() {",
            "        this.messageService.add({ severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000 });",
            "    }",
            "",
            "    formatSize(bytes: number) {",
            "        const k = 1024;",
            "        const dm = 2;",
            "        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];",
            "        const i = Math.floor(Math.log(bytes) / Math.log(k));",
            "        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];",
            "    }",
            "}",
            "",
            "<!-- ${1:fileuploaddemo.html} -->",
            "<p-toast />",
            "<p-fileupload name=\"myfile[]\" url=\"${3:https://www.primefaces.org/cdn/api/upload.php}\" [multiple]=\"true\" accept=\"${4:image/*}\" maxFileSize=\"${5:1000000}\" (onUpload)=\"onTemplatedUpload()\" (onSelect)=\"onSelectedFiles($event)\">",
            "    <ng-template #header let-files let-chooseCallback=\"chooseCallback\" let-clearCallback=\"clearCallback\" let-uploadCallback=\"uploadCallback\">",
            "        <div class=\"flex flex-wrap justify-between items-center flex-1 gap-4\">",
            "            <div class=\"flex gap-2\">",
            "                <p-button (onClick)=\"choose($event, chooseCallback)\" icon=\"pi pi-images\" [rounded]=\"true\" [outlined]=\"true\" />",
            "                <p-button (onClick)=\"uploadEvent(uploadCallback)\" icon=\"pi pi-cloud-upload\" [rounded]=\"true\" [outlined]=\"true\" severity=\"success\" [disabled]=\"!files || files.length === 0\" />",
            "                <p-button (onClick)=\"clearCallback()\" icon=\"pi pi-times\" [rounded]=\"true\" [outlined]=\"true\" severity=\"danger\" [disabled]=\"!files || files.length === 0\" />",
            "            </div>",
            "            <p-progressbar [value]=\"totalSizePercent\" [showValue]=\"false\" class=\"w-full\" styleClass=\"md:w-20rem h-1 w-full md:ml-auto\">",
            "                <span class=\"whitespace-nowrap\">{{ totalSize }}B / 1Mb</span>",
            "            </p-progressbar>",
            "        </div>",
            "    </ng-template>",
            "    <ng-template #content let-files let-uploadedFiles=\"uploadedFiles\" let-removeFileCallback=\"removeFileCallback\" let-removeUploadedFileCallback=\"removeUploadedFileCallback\">",
            "        <div class=\"flex flex-col gap-8 pt-4\">",
            "            <div *ngIf=\"files?.length > 0\">",
            "                <h5>${6:Pending}</h5>",
            "                <div class=\"flex flex-wrap gap-4\">",
            "                    <div *ngFor=\"let file of files; let i = index\" class=\"p-8 rounded-border flex flex-col border border-surface items-center gap-4\">",
            "                        <div>",
            "                            <img role=\"presentation\" [alt]=\"file.name\" [src]=\"file.objectURL\" width=\"100\" height=\"50\" />",
            "                        </div>",
            "                        <span class=\"font-semibold text-ellipsis max-w-60 whitespace-nowrap overflow-hidden\">{{ file.name }}</span>",
            "                        <div>{{ formatSize(file.size) }}</div>",
            "                        <p-badge value=\"Pending\" severity=\"warn\" />",
            "                        <p-button icon=\"pi pi-times\" (click)=\"onRemoveTemplatingFile($event, file, removeFileCallback, i)\" [outlined]=\"true\" [rounded]=\"true\" severity=\"danger\" />",
            "                    </div>",
            "                </div>",
            "            </div>",
            "            <div *ngIf=\"uploadedFiles?.length > 0\">",
            "                <h5>${7:Completed}</h5>",
            "                <div class=\"flex flex-wrap gap-4\">",
            "                    <div *ngFor=\"let file of uploadedFiles; let i = index\" class=\"card m-0 px-12 flex flex-col border border-surface items-center gap-4\">",
            "                        <div>",
            "                            <img role=\"presentation\" [alt]=\"file.name\" [src]=\"file.objectURL\" width=\"100\" height=\"50\" />",
            "                        </div>",
            "                        <span class=\"font-semibold text-ellipsis max-w-60 whitespace-nowrap overflow-hidden\">{{ file.name }}</span>",
            "                        <div>{{ formatSize(file.size) }}</div>",
            "                        <p-badge value=\"Completed\" class=\"mt-4\" severity=\"success\" />",
            "                        <p-button icon=\"pi pi-times\" (onClick)=\"removeUploadedFileCallback(i)\" [outlined]=\"true\" [rounded]=\"true\" severity=\"danger\" />",
            "                    </div>",
            "                </div>",
            "            </div>",
            "        </div>",
            "    </ng-template>",
            "    <ng-template #file></ng-template>",
            "    <ng-template #empty>",
            "        <div class=\"flex items-center justify-center flex-col\">",
            "            <i class=\"pi pi-cloud-upload !border-2 !rounded-full !p-8 !text-4xl !text-muted-color\"></i>",
            "            <p class=\"mt-6 mb-0\">${8:Drag and drop files to here to upload.}</p>",
            "        </div>",
            "    </ng-template>",
            "</p-fileupload>"
        ],
        "description": "PrimeNG FileUpload with custom templates and file management"
    },
    "PrimeNG FileUpload Advanced": {
        "prefix": "p-fileupload-advanced",
        "body": [
            "import { FileUploadModule } from 'primeng/fileupload';",
            "",
            "<p-fileupload name=\"demo[]\" url=\"${1:https://www.primefaces.org/cdn/api/upload.php}\" (onUpload)=\"onUpload($event)\" [multiple]=\"true\" accept=\"${2:image/*}\" maxFileSize=\"${3:1000000}\" mode=\"advanced\">",
            "    <ng-template #empty>",
            "        <div>${4:Drag and drop files to here to upload.}</div>",
            "    </ng-template>",
            "    <ng-template #content>",
            "        <ul *ngIf=\"uploadedFiles.length\">",
            "            <li *ngFor=\"let file of uploadedFiles\">{{ file.name }} - {{ file.size }} bytes</li>",
            "        </ul>",
            "    </ng-template>",
            "</p-fileupload>"
        ],
        "description": "Advanced PrimeNG FileUpload with drag and drop support"
    }
}